# Application Configuration
spring.application.name=${SPRING_APPLICATION_NAME:nomanweb-backend}
server.port=${SERVER_PORT:8080}

# Database Configuration - PostgreSQL
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/nomanweb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:2480}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.postgresql.Driver}

# JPA Configuration
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:true}
spring.jpa.properties.hibernate.dialect=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.hbm2ddl.auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}
spring.jpa.generate-ddl=${SPRING_JPA_GENERATE_DDL:true}

# Redis Configuration
spring.data.redis.host=${SPRING_DATA_REDIS_HOST:localhost}
spring.data.redis.port=${SPRING_DATA_REDIS_PORT:6379}
spring.data.redis.password=${SPRING_DATA_REDIS_PASSWORD:}
spring.data.redis.timeout=${SPRING_DATA_REDIS_TIMEOUT:60000ms}
spring.data.redis.lettuce.pool.max-active=${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_ACTIVE:8}
spring.data.redis.lettuce.pool.max-idle=${SPRING_DATA_REDIS_LETTUCE_POOL_MAX_IDLE:8}
spring.data.redis.lettuce.pool.min-idle=${SPRING_DATA_REDIS_LETTUCE_POOL_MIN_IDLE:0}

# Typesense Configuration
typesense.host=${TYPESENSE_HOST:localhost}
typesense.port=${TYPESENSE_PORT:8108}
typesense.protocol=${TYPESENSE_PROTOCOL:http}
typesense.api-key=${TYPESENSE_API_KEY:d4b1a1f3-e5c2-4a8d-9f7b-6c3a9e8d2f1a}
typesense.connection-timeout=${TYPESENSE_CONNECTION_TIMEOUT:5000}
typesense.read-timeout=${TYPESENSE_READ_TIMEOUT:5000}

# JWT Configuration
app.jwt.secret=${APP_JWT_SECRET:your-256-bit-secret-key-here-make-it-very-long-and-secure-for-production}
app.jwt.expiration=${APP_JWT_EXPIRATION:86400000}
app.jwt.refresh-expiration=${APP_JWT_REFRESH_EXPIRATION:604800000}

# File Upload Configuration
spring.servlet.multipart.max-file-size=${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE:10MB}

# Email Configuration
spring.mail.host=${SPRING_MAIL_HOST:smtp.gmail.com}
spring.mail.port=${SPRING_MAIL_PORT:587}
spring.mail.username=${SPRING_MAIL_USERNAME:saiheinthuyasoe@gmail.com}
spring.mail.password=${SPRING_MAIL_PASSWORD:stnp gloa vqsv aovw}
spring.mail.properties.mail.smtp.auth=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH:true}
spring.mail.properties.mail.smtp.starttls.enable=${SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE:true}

# Cloudinary Configuration
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME:dou5xwcdi}
cloudinary.api-key=${CLOUDINARY_API_KEY:591472543194672}
cloudinary.api-secret=${CLOUDINARY_API_SECRET:ui3Qg137HrclpxOswV4ZM8GazZk}

# LINE Bot Configuration
line.bot.channel-token=${LINE_BOT_CHANNEL_TOKEN:cjjfkSqIMuc7ya/q/AJhLF94FkoZ3g2Wu2tnqYA0ts4JCkNu6YQS3LfZGnpJXJPlug2tg3GimZRy2pYfH3Xj8cyo0plfUqX/wPhLp0NmvqfaN3h5/VYILPMHZCi2UrNIN2J3xSGEQO8zkCzx1GM+GgdB04t89/1O/w1cDnyilFU=}
line.bot.channel-secret=${LINE_BOT_CHANNEL_SECRET:54224a25944c0d83237e9b1e0c36686d}

# Application Settings
app.frontend.url=${APP_FRONTEND_URL:http://localhost:3000}
app.email.from=${APP_EMAIL_FROM:saiheinthuyasoe@gmail.com}
app.email.verification.expiry=${APP_EMAIL_VERIFICATION_EXPIRY:48}
app.password.reset.expiry=${APP_PASSWORD_RESET_EXPIRY:24}

# Logging Configuration
logging.level.com.app.nomanweb_backend=${LOGGING_LEVEL_COM_APP_NOMANWEB_BACKEND:DEBUG}
logging.level.org.springframework.security=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY:DEBUG}
logging.level.org.hibernate.SQL=${LOGGING_LEVEL_ORG_HIBERNATE_SQL:DEBUG}
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=${LOGGING_LEVEL_ORG_HIBERNATE_TYPE_DESCRIPTOR_SQL_BASICBINDER:TRACE}
logging.level.org.hibernate.tool.hbm2ddl=${LOGGING_LEVEL_ORG_HIBERNATE_TOOL_HBM2DDL:DEBUG}
logging.level.org.springframework.orm.jpa=${LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_ORM_JPA:DEBUG}

# Actuator Configuration
management.endpoints.web.exposure.include=${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:health,info,metrics}
management.endpoint.health.show-details=${MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS:when-authorized}

# CORS Configuration
app.cors.allowed-origins=${APP_CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}
app.cors.allowed-methods=${APP_CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,OPTIONS}
app.cors.allowed-headers=${APP_CORS_ALLOWED_HEADERS:*}
app.cors.allow-credentials=${APP_CORS_ALLOW_CREDENTIALS:true}

# Firebase Configuration
firebase.service-account-key=${FIREBASE_SERVICE_ACCOUNT_KEY:firebase-service-account.json}

# LINE OAuth Configuration
line.channel-id=${LINE_CHANNEL_ID:2007499018}
line.channel-secret=${LINE_CHANNEL_SECRET:fde2263703ef7429ba83b5d1daa5b9de}
line.callback-url=${LINE_CALLBACK_URL:http://localhost:3000/auth/line/callback}

# Security Configuration
security.rate-limit.login.attempts=${SECURITY_RATE_LIMIT_LOGIN_ATTEMPTS:5}
security.rate-limit.login.window=${SECURITY_RATE_LIMIT_LOGIN_WINDOW:60}
security.rate-limit.registration.attempts=${SECURITY_RATE_LIMIT_REGISTRATION_ATTEMPTS:3}
security.rate-limit.registration.window=${SECURITY_RATE_LIMIT_REGISTRATION_WINDOW:3600}
security.rate-limit.password-reset.attempts=${SECURITY_RATE_LIMIT_PASSWORD_RESET_ATTEMPTS:3}
security.rate-limit.password-reset.window=${SECURITY_RATE_LIMIT_PASSWORD_RESET_WINDOW:3600} 